/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Person;

import Business.Country.Country;
import Business.EcoSystem;
import Business.Enterprise.AmbulanceEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PoliceEnterprise;
import Business.Organization.AmbulanceOrganization;
import Business.Organization.Organization;
import Business.Organization.PersonOrganization;
import Business.Organization.PoliceOrganization;
import Business.PatternMatcher;
import Business.Person.Accident;
import Business.Person.Person;
import Business.Person.VitalSign;
import Business.State.State;
//import Business.Person.PersonDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PoliceRequest;
import Business.WorkQueue.VehicleWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class PersonWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PersonWorkAreaJPanel
     */
    JPanel upc;
    EcoSystem business;
    UserAccount account;
    PersonOrganization p;

    public PersonWorkAreaJPanel(JPanel userProcessContainer, EcoSystem business, UserAccount account, PersonOrganization p) {
        initComponents();
        this.upc = userProcessContainer;
        this.business = business;
        this.account = account;
        this.p = p;
        populateTable();
        populateCountryCombo();
       
    }

    public void populateCountryCombo() {
        countryCombo.removeAllItems();
        for (Country c : business.getCountryList().getCountryDirectory()) {
            countryCombo.addItem(c);
        }

    }

    public void populateStateCombo() {
        stateCombo.removeAllItems();
        Country country = (Country) countryCombo.getSelectedItem();
        for (State s : country.getStateList().getStateDirectory()) {
            stateCombo.addItem(s);
        }

    }

    private void populateTable() {
        Person p = account.getEmployee();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int rowCount = dtm.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }

        for (VitalSign vs : p.getVitalSignHistory().getVSHistory()) {
            Object[] row = new Object[2];
            row[0] = vs;
            row[1] = vs.getStatus(p, vs);
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        zipJText = new javax.swing.JTextField();
        accidentJButton = new javax.swing.JButton();
        countryCombo = new javax.swing.JComboBox();
        stateCombo = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        impactJText = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        impactbar = new javax.swing.JProgressBar();

        jToggleButton1.setText("jToggleButton1");

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setText("Welcome");

        jButton1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton1.setText("Update Information");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        zipJText.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N

        accidentJButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        accidentJButton.setText("Request ");
        accidentJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accidentJButtonActionPerformed(evt);
            }
        });

        countryCombo.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        countryCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryComboActionPerformed(evt);
            }
        });

        stateCombo.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        stateCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateComboActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tw Cen MT", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Timestamp", "Normal/ Abnormal"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setText("Accident ?");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel3.setText("Country");

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel4.setText("State");

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel5.setText("ZipCode");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel6.setText("Impact");

        impactJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                impactJTextActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton2.setText("View Reports");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        impactbar.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        impactbar.setForeground(new java.awt.Color(255, 255, 204));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addGap(18, 18, 18))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(25, 25, 25)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(impactJText)
                                            .addComponent(countryCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(stateCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(zipJText)
                                            .addComponent(accidentJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(impactbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(234, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(countryCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(impactJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(impactbar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(zipJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(accidentJButton)
                .addContainerGap(71, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void accidentJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accidentJButtonActionPerformed
        // TODO add your handling code here:
        Country country = (Country) countryCombo.getSelectedItem();
        State state = (State) stateCombo.getSelectedItem();

        PatternMatcher pattern = new PatternMatcher();
        if (zipJText.getText().trim().isEmpty() || impactJText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in the text boxes", "Error", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {

                String zipCode = zipJText.getText();
                String impact = impactJText.getText();

                if (!pattern.getZipCodes().matcher(zipJText.getText()).matches()) {
                    JOptionPane.showMessageDialog(null, "Cannot add symbols", "Caution", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                VehicleWorkRequest request = null;
                PoliceRequest request2 = null;
                request = new VehicleWorkRequest();
                request2 = new PoliceRequest();
                request.setMessage(zipCode);
                request.setSender(account);
                request.setStatus("Sent");

                request2.setMessage(zipCode);
                request2.setSender(account);
                request2.setStatus("Sent");

                Organization org = null;

                for (Enterprise e : state.getEnterpriseDirectory().getEnterpriseList()) {
                    if (e instanceof AmbulanceEnterprise) {
                        for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                            if (o instanceof AmbulanceOrganization && (request.getMessage().equals(o.getZipCode()))) {
                                System.out.println("zip entered" + request.getMessage() + "org zip" + o.getZipCode());
                                org = o;

                                break;
                            }
                        }

                    }
                }
                if (org != null) {
                    org.getWorkQueue().getWorkRequestList().add(request);
                    Person p = account.getEmployee();
                    p.setAccidentNo();
                    Accident a = p.getAccidentHistory().addAccidentRecord();
                    a.setCountry(country.getName());
                    a.setState(state.getName());
                    a.setZipCode(zipCode);
                    a.setImpact(impact);
                    a.getTimestamp();
                    System.out.print("accident added");
                    JOptionPane.showMessageDialog(this, "Request sent to" + " " + org.getZipCode());
                    impactJText.setText("");
                    zipJText.setText("");
                     
                } else {
                    JOptionPane.showMessageDialog(this, "No zipcode match");
                }

                Organization org1 = null;

                for (Enterprise e : state.getEnterpriseDirectory().getEnterpriseList()) {
                    if (e instanceof PoliceEnterprise) {
                        for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                            if (o instanceof PoliceOrganization && (request2.getMessage().equals(o.getZipCode()))) {
                                System.out.println("zip entered" + request2.getMessage() + "org zip" + o.getZipCode());
                                org1 = o;

                                break;
                            }
                        }

                    }
                }
                if (org1 != null) {
                    org1.getWorkQueue().getWorkRequestList().add(request2);
                    System.out.print("req sent" + request2.getMessage());
                    JOptionPane.showMessageDialog(this, "Request sent to" + " " + org1.getZipCode());
                } else {
                    JOptionPane.showMessageDialog(this, "No zipcode match");
                }

            } catch (NumberFormatException e) {

                JOptionPane.showMessageDialog(null, "Enter Details in correct format", "error", JOptionPane.ERROR_MESSAGE);
            }

        }


    }//GEN-LAST:event_accidentJButtonActionPerformed

    private void countryComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryComboActionPerformed
        // TODO add your handling code here:
        populateStateCombo();

    }//GEN-LAST:event_countryComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        UpdateInfoJPanel uijp = new UpdateInfoJPanel(upc, account.getEmployee(), account);
        upc.add(uijp);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.next(upc);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void stateComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateComboActionPerformed
        // TODO add your handling code here:
        int randomNumbers = (int) (Math.random() * 50 + 1);
        impactbar.setValue(randomNumbers);
        impactJText.setText(String.valueOf(impactbar.getValue()));

    }//GEN-LAST:event_stateComboActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ViewReportsJPanel vrjp = new ViewReportsJPanel(upc, account.getEmployee());
        upc.add(vrjp);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.next(upc);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void impactJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_impactJTextActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_impactJTextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accidentJButton;
    private javax.swing.JComboBox countryCombo;
    private javax.swing.JTextField impactJText;
    private javax.swing.JProgressBar impactbar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JComboBox stateCombo;
    private javax.swing.JTextField zipJText;
    // End of variables declaration//GEN-END:variables
}
